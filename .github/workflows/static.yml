Simple workflow for deploying static content to GitHub Pages with a build step
name: Deploy static content to Pages

on:

Runs on pushes targeting the default branch
push:
branches: ["gh-pages"]

Allows you to run this workflow manually from the Actions tab
workflow_dispatch:

Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
contents: read
pages: write
id-token: write

Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
group: "pages"
cancel-in-progress: false

jobs:

This job builds the static content
build:
runs-on: ubuntu-latest
steps:
- name: Checkout
uses: actions/checkout@v4
- name: Set up Node.js
# Assuming a Node.js project. You can change this to match your project's needs.
uses: actions/setup-node@v4
with:
node-version: '20' # Specify the Node.js version you need
- name: Install dependencies
run: npm ci
- name: Build the static site
# This is the build command. Change this to match your build process.
run: npm run build
- name: Upload artifact
uses: actions/upload-pages-artifact@v3
with:
# The path to the directory containing your built static files.
# Change this to match your build output directory (e.g., 'dist', 'public', etc.)
path: 'build'

This job deploys the static content from the artifact
deploy:
environment:
name: github-pages
url: ${{ steps.deployment.outputs.page_url }}
runs-on: ubuntu-latest
needs: build # This ensures the build job completes successfully before deployment
steps:
- name: Deploy to GitHub Pages
id: deployment
uses: actions/deploy-pages@v4
